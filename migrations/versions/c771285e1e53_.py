"""empty message

Revision ID: c771285e1e53
Revises: 
Create Date: 2022-07-13 13:18:35.146526

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision = 'c771285e1e53'
down_revision = None
branch_labels = None
depends_on = None
conn = op.get_bind()
inspector = Inspector.from_engine(conn)
tables = inspector.get_table_names()

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if 'artists' not in tables:
        op.create_table('artists',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('first_name', sa.String(), nullable=True),
        sa.Column('last_name', sa.String(), nullable=True),
        sa.Column('gender', sa.String(), nullable=True),
        sa.Column('dateofbirth', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )

    if 'movies' not in tables:    
        op.create_table('movies',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('genre', sa.String(), nullable=True),
        sa.Column('released_year', sa.Integer(), nullable=True),
        sa.Column('duration_mins', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )

    if 'casting' not in tables:     
        op.create_table('casting',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('actor_id', sa.Integer(), nullable=True),
        sa.Column('movie_id', sa.Integer(), nullable=True),
        sa.Column('name_of_role', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['actor_id'], ['artists.id'], ),
        sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('casting')
    op.drop_table('movies')
    op.drop_table('artists')
    # ### end Alembic commands ###
